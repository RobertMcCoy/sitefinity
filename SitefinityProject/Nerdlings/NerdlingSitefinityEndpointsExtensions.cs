// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace SitefinityWebApp.Api
{
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for NerdlingSitefinityEndpoints.
    /// </summary>
    public static partial class NerdlingSitefinityEndpointsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            public static void ApiGitHubGet(this INerdlingSitefinityEndpoints operations)
            {
                operations.ApiGitHubGetAsync().GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiGitHubGetAsync(this INerdlingSitefinityEndpoints operations, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiGitHubGetWithHttpMessagesAsync(null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            public static void ApiGitHubByNameGet(this INerdlingSitefinityEndpoints operations, string name)
            {
                operations.ApiGitHubByNameGetAsync(name).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiGitHubByNameGetAsync(this INerdlingSitefinityEndpoints operations, string name, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiGitHubByNameGetWithHttpMessagesAsync(name, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
